// generated by Fast Light User Interface Designer (fluid) version 1.00

#include "xfsmdiag.h"

Fl_Window *scopewindow=(Fl_Window *)0;

scope *scdisp=(scope *)0;

Fl_Button *cleargr=(Fl_Button *)0;

Fl_Group *scopemode=(Fl_Group *)0;

Fl_Check_Button *sm_off=(Fl_Check_Button *)0;

Fl_Check_Button *sm_input=(Fl_Check_Button *)0;

Fl_Check_Button *sm_demod=(Fl_Check_Button *)0;

Fl_Check_Button *sm_constell=(Fl_Check_Button *)0;

Fl_Check_Button *sm_dcd=(Fl_Check_Button *)0;

Fl_Button *quit=(Fl_Button *)0;

Fl_Round_Button *st_dcd=(Fl_Round_Button *)0;

Fl_Round_Button *st_ptt=(Fl_Round_Button *)0;

Fl_Output *modename=(Fl_Output *)0;

Fl_Output *drivername=(Fl_Output *)0;

Fl_Window* create_the_forms() {
  Fl_Window* w;
  { Fl_Window* o = scopewindow = new Fl_Window(700, 550, "SoundCard Modem Driver Diagnose Tool");
    w = o;
    o->box(FL_NO_BOX);
    { Fl_Box* o = new Fl_Box(0, 0, 700, 550);
      o->box(FL_UP_BOX);
    }
    { scope* o = scdisp = new scope(10, 10, 530, 530);
      o->box(FL_DOWN_BOX);
    }
    { Fl_Button* o = cleargr = new Fl_Button(640, 150, 50, 60, "Clear\nGraph");
      o->callback((Fl_Callback*)cb_cleargr, (void*)(0));
    }
    { Fl_Box* o = new Fl_Box(550, 310, 140, 70, "(C) 1996 by\nTom Sailer\nHB9JNX/AE4WA");
      o->box(FL_EMBOSSED_BOX);
      o->labelsize(18);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Group* o = scopemode = new Fl_Group(550, 10, 140, 130);
      o->align(FL_ALIGN_CENTER);
      { Fl_Box* o = new Fl_Box(550, 10, 140, 130);
        o->box(FL_DOWN_BOX);
      }
      { Fl_Check_Button* o = sm_off = new Fl_Check_Button(560, 20, 120, 20, "Off");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)cb_mode, (void*)(0));
      }
      { Fl_Check_Button* o = sm_input = new Fl_Check_Button(560, 40, 120, 20, "Input");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)cb_mode, (void*)(1));
      }
      { Fl_Check_Button* o = sm_demod = new Fl_Check_Button(560, 60, 120, 20, "Demodulator");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)cb_mode, (void*)(2));
      }
      { Fl_Check_Button* o = sm_constell = new Fl_Check_Button(560, 80, 120, 20, "Constellation");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)cb_mode, (void*)(3));
      }
      { Fl_Check_Button* o = sm_dcd = new Fl_Check_Button(560, 110, 120, 20, "Gated with DCD");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)cb_mode, (void*)(256));
      }
      o->end();
    }
    { Fl_Button* o = quit = new Fl_Button(550, 270, 140, 30, "Quit");
      o->callback((Fl_Callback*)cb_quit, (void*)(0));
    }
    { Fl_Box* o = new Fl_Box(550, 150, 80, 60);
      o->box(FL_DOWN_BOX);
    }
    { Fl_Round_Button* o = st_dcd = new Fl_Round_Button(600, 160, 20, 20);
      o->down_box(FL_ROUND_DOWN_BOX);
      o->selection_color(3);
      o->align(FL_ALIGN_CENTER);
    }
    { Fl_Round_Button* o = st_ptt = new Fl_Round_Button(600, 180, 20, 20);
      o->down_box(FL_ROUND_DOWN_BOX);
      o->align(FL_ALIGN_CENTER);
    }
    { Fl_Box* o = new Fl_Box(560, 180, 40, 20, "PTT");
      o->box(FL_FLAT_BOX);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Box* o = new Fl_Box(560, 160, 40, 20, "DCD");
      o->box(FL_FLAT_BOX);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Output* o = modename = new Fl_Output(550, 220, 140, 20);
      o->box(FL_EMBOSSED_BOX);
      o->selection_color(49);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Output* o = drivername = new Fl_Output(550, 240, 140, 20);
      o->box(FL_EMBOSSED_BOX);
      o->selection_color(49);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    o->end();
  }
  return w;
}
