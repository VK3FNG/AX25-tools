// generated by Fast Light User Interface Designer (fluid) version 1.00

#include "xfsmmixer.h"

Fl_Window *mixer_ad1848=(Fl_Window *)0;

Fl_Value_Slider *ad1848_inl=(Fl_Value_Slider *)0;

Fl_Value_Slider *ad1848_inr=(Fl_Value_Slider *)0;

Fl_Value_Slider *ad1848_outl=(Fl_Value_Slider *)0;

Fl_Value_Slider *ad1848_outr=(Fl_Value_Slider *)0;

Fl_Button *ad1848_quit=(Fl_Button *)0;

Fl_Group *ad1848_srcr=(Fl_Group *)0;

Fl_Check_Button *ad1848_srcr_line=(Fl_Check_Button *)0;

Fl_Check_Button *ad1848_srcr_aux1=(Fl_Check_Button *)0;

Fl_Check_Button *ad1848_srcr_mic=(Fl_Check_Button *)0;

Fl_Check_Button *ad1848_srcr_dac=(Fl_Check_Button *)0;

Fl_Group *ad1848_srcl=(Fl_Group *)0;

Fl_Check_Button *ad1848_srcl_line=(Fl_Check_Button *)0;

Fl_Check_Button *ad1848_srcl_aux1=(Fl_Check_Button *)0;

Fl_Check_Button *ad1848_srcl_mic=(Fl_Check_Button *)0;

Fl_Check_Button *ad1848_srcl_dac=(Fl_Check_Button *)0;

Fl_Window* create_form_ad1848() {
  Fl_Window* w;
  { Fl_Window* o = mixer_ad1848 = new Fl_Window(300, 330, "SoundModem Mixer");
    w = o;
    o->box(FL_NO_BOX);
    { Fl_Box* o = new Fl_Box(0, 0, 300, 330);
      o->box(FL_UP_BOX);
    }
    { Fl_Box* o = new Fl_Box(10, 10, 280, 310);
      o->box(FL_DOWN_BOX);
    }
    { Fl_Value_Slider* o = ad1848_inl = new Fl_Value_Slider(20, 20, 30, 270, "Input\nleft");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ad1848);
    }
    { Fl_Value_Slider* o = ad1848_inr = new Fl_Value_Slider(60, 20, 30, 270, "Input\nright");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ad1848);
    }
    { Fl_Value_Slider* o = ad1848_outl = new Fl_Value_Slider(100, 20, 30, 270, "Output\nleft");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ad1848);
    }
    { Fl_Value_Slider* o = ad1848_outr = new Fl_Value_Slider(140, 20, 30, 270, "Output\nright");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ad1848);
    }
    { Fl_Button* o = ad1848_quit = new Fl_Button(180, 280, 100, 30, "Quit");
      o->callback((Fl_Callback*)cb_quit, (void*)(0));
    }
    { Fl_Group* o = ad1848_srcr = new Fl_Group(180, 150, 100, 120);
      o->align(FL_ALIGN_CENTER);
      { Fl_Box* o = new Fl_Box(180, 150, 100, 120);
        o->box(FL_DOWN_BOX);
      }
      { Fl_Check_Button* o = ad1848_srcr_line = new Fl_Check_Button(190, 180, 60, 20, "Line");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ad1848);
      }
      { Fl_Check_Button* o = ad1848_srcr_aux1 = new Fl_Check_Button(190, 200, 60, 20, "Aux1");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ad1848);
      }
      { Fl_Check_Button* o = ad1848_srcr_mic = new Fl_Check_Button(190, 220, 60, 20, "Mic");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ad1848);
      }
      { Fl_Check_Button* o = ad1848_srcr_dac = new Fl_Check_Button(190, 240, 60, 20, "DAC");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ad1848);
      }
      { Fl_Box* o = new Fl_Box(190, 160, 60, 20, "Right source");
        o->box(FL_FLAT_BOX);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Group* o = ad1848_srcl = new Fl_Group(180, 20, 100, 120);
      o->align(FL_ALIGN_CENTER);
      { Fl_Box* o = new Fl_Box(180, 20, 100, 120);
        o->box(FL_DOWN_BOX);
      }
      { Fl_Box* o = new Fl_Box(190, 30, 60, 20, "Left source");
        o->box(FL_FLAT_BOX);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = ad1848_srcl_line = new Fl_Check_Button(190, 50, 60, 20, "Line");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ad1848);
      }
      { Fl_Check_Button* o = ad1848_srcl_aux1 = new Fl_Check_Button(190, 70, 60, 20, "Aux1");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ad1848);
      }
      { Fl_Check_Button* o = ad1848_srcl_mic = new Fl_Check_Button(190, 90, 60, 20, "Mic");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ad1848);
      }
      { Fl_Check_Button* o = ad1848_srcl_dac = new Fl_Check_Button(190, 110, 60, 20, "DAC");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ad1848);
      }
      o->end();
    }
    o->end();
  }
  return w;
}

Fl_Window *mixer_ct1335=(Fl_Window *)0;

Fl_Value_Slider *ct1335_out=(Fl_Value_Slider *)0;

Fl_Button *ct1335_quit=(Fl_Button *)0;

Fl_Window* create_form_ct1335() {
  Fl_Window* w;
  { Fl_Window* o = mixer_ct1335 = new Fl_Window(100, 360, "SoundModem Mixer");
    w = o;
    o->box(FL_NO_BOX);
    { Fl_Box* o = new Fl_Box(0, 0, 100, 360);
      o->box(FL_UP_BOX);
    }
    { Fl_Box* o = new Fl_Box(10, 10, 80, 340);
      o->box(FL_DOWN_BOX);
    }
    { Fl_Value_Slider* o = ct1335_out = new Fl_Value_Slider(30, 20, 40, 270, "Output");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1335);
    }
    { Fl_Button* o = ct1335_quit = new Fl_Button(20, 310, 60, 30, "Quit");
      o->callback((Fl_Callback*)cb_quit, (void*)(0));
    }
    o->end();
  }
  return w;
}

Fl_Window *mixer_ct1345=(Fl_Window *)0;

Fl_Value_Slider *ct1345_outl=(Fl_Value_Slider *)0;

Fl_Value_Slider *ct1345_outr=(Fl_Value_Slider *)0;

Fl_Button *ct1345_quit=(Fl_Button *)0;

Fl_Group *ct1345_src=(Fl_Group *)0;

Fl_Check_Button *ct1345_src_mic=(Fl_Check_Button *)0;

Fl_Check_Button *ct1345_src_cd=(Fl_Check_Button *)0;

Fl_Check_Button *ct1345_src_line=(Fl_Check_Button *)0;

Fl_Window* create_form_ct1345() {
  Fl_Window* w;
  { Fl_Window* o = mixer_ct1345 = new Fl_Window(190, 330, "SoundModem Mixer");
    w = o;
    o->box(FL_NO_BOX);
    { Fl_Box* o = new Fl_Box(0, 0, 190, 330);
      o->box(FL_UP_BOX);
    }
    { Fl_Box* o = new Fl_Box(10, 10, 170, 310);
      o->box(FL_DOWN_BOX);
    }
    { Fl_Value_Slider* o = ct1345_outl = new Fl_Value_Slider(20, 20, 30, 270, "Output\nleft");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1345);
    }
    { Fl_Value_Slider* o = ct1345_outr = new Fl_Value_Slider(60, 20, 30, 270, "Output\nright");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1345);
    }
    { Fl_Button* o = ct1345_quit = new Fl_Button(100, 280, 70, 30, "Quit");
      o->callback((Fl_Callback*)cb_quit, (void*)(0));
    }
    { Fl_Group* o = ct1345_src = new Fl_Group(100, 20, 70, 100);
      o->align(FL_ALIGN_CENTER);
      { Fl_Box* o = new Fl_Box(100, 20, 70, 100);
        o->box(FL_DOWN_BOX);
      }
      { Fl_Check_Button* o = ct1345_src_mic = new Fl_Check_Button(110, 50, 50, 20, "Mic");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1345);
      }
      { Fl_Check_Button* o = ct1345_src_cd = new Fl_Check_Button(110, 70, 50, 20, "CD");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1345);
      }
      { Fl_Check_Button* o = ct1345_src_line = new Fl_Check_Button(110, 90, 50, 20, "Line");
        o->type(102);
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1345);
      }
      { Fl_Box* o = new Fl_Box(110, 30, 50, 20, "Source");
        o->box(FL_FLAT_BOX);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    o->end();
  }
  return w;
}

Fl_Window *mixer_ct1745=(Fl_Window *)0;

Fl_Value_Slider *ct1745_inl=(Fl_Value_Slider *)0;

Fl_Value_Slider *ct1745_inr=(Fl_Value_Slider *)0;

Fl_Value_Slider *ct1745_outl=(Fl_Value_Slider *)0;

Fl_Value_Slider *ct1745_outr=(Fl_Value_Slider *)0;

Fl_Button *ct1745_quit=(Fl_Button *)0;

Fl_Value_Slider *ct1745_treble=(Fl_Value_Slider *)0;

Fl_Value_Slider *ct1745_bass=(Fl_Value_Slider *)0;

Fl_Group *ct1745_srcl=(Fl_Group *)0;

Fl_Check_Button *ct1745_srcl_mic=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcl_cdl=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcl_cdr=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcl_linel=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcl_midil=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcl_midir=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcl_liner=(Fl_Check_Button *)0;

Fl_Group *ct1745_srcr=(Fl_Group *)0;

Fl_Check_Button *ct1745_srcr_mic=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcr_cdl=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcr_cdr=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcr_linel=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcr_midil=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcr_midir=(Fl_Check_Button *)0;

Fl_Check_Button *ct1745_srcr_liner=(Fl_Check_Button *)0;

Fl_Window* create_form_ct1745() {
  Fl_Window* w;
  { Fl_Window* o = mixer_ct1745 = new Fl_Window(430, 330, "SoundModem Mixer");
    w = o;
    o->box(FL_NO_BOX);
    { Fl_Box* o = new Fl_Box(0, 0, 430, 330);
      o->box(FL_UP_BOX);
    }
    { Fl_Box* o = new Fl_Box(10, 10, 410, 310);
      o->box(FL_DOWN_BOX);
    }
    { Fl_Value_Slider* o = ct1745_inl = new Fl_Value_Slider(20, 20, 30, 270, "Input\nleft");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1745);
    }
    { Fl_Value_Slider* o = ct1745_inr = new Fl_Value_Slider(60, 20, 30, 270, "Input\nright");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1745);
    }
    { Fl_Value_Slider* o = ct1745_outl = new Fl_Value_Slider(100, 20, 30, 270, "Output\nleft");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1745);
    }
    { Fl_Value_Slider* o = ct1745_outr = new Fl_Value_Slider(140, 20, 30, 270, "Output\nright");
      o->type(2);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1745);
    }
    { Fl_Button* o = ct1745_quit = new Fl_Button(180, 280, 230, 30, "Quit");
      o->callback((Fl_Callback*)cb_quit, (void*)(0));
    }
    { Fl_Value_Slider* o = ct1745_treble = new Fl_Value_Slider(180, 210, 230, 20, "Treble");
      o->type(3);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1745);
    }
    { Fl_Value_Slider* o = ct1745_bass = new Fl_Value_Slider(180, 250, 230, 20, "Bass");
      o->type(3);
      o->labelsize(8);
      o->callback((Fl_Callback*)update_ct1745);
    }
    { Fl_Group* o = ct1745_srcl = new Fl_Group(180, 20, 110, 180);
      o->align(FL_ALIGN_CENTER);
      { Fl_Box* o = new Fl_Box(180, 20, 110, 180);
        o->box(FL_DOWN_BOX);
      }
      { Fl_Box* o = new Fl_Box(191, 29, 89, 18, "Left source");
        o->box(FL_FLAT_BOX);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = ct1745_srcl_mic = new Fl_Check_Button(190, 50, 90, 20, "Mic");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcl_cdl = new Fl_Check_Button(190, 70, 90, 20, "CD left");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcl_cdr = new Fl_Check_Button(190, 90, 90, 20, "CD right");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcl_linel = new Fl_Check_Button(190, 110, 90, 20, "Line left");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcl_midil = new Fl_Check_Button(190, 150, 90, 20, "MIDI left");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcl_midir = new Fl_Check_Button(190, 170, 90, 20, "MIDI right");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcl_liner = new Fl_Check_Button(190, 130, 90, 20, "Line right");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      o->end();
    }
    { Fl_Group* o = ct1745_srcr = new Fl_Group(300, 20, 110, 180);
      o->align(FL_ALIGN_CENTER);
      { Fl_Box* o = new Fl_Box(300, 20, 110, 180);
        o->box(FL_DOWN_BOX);
      }
      { Fl_Box* o = new Fl_Box(311, 29, 89, 18, "Right source");
        o->box(FL_FLAT_BOX);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = ct1745_srcr_mic = new Fl_Check_Button(310, 50, 90, 20, "Mic");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcr_cdl = new Fl_Check_Button(310, 70, 90, 20, "CD left");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcr_cdr = new Fl_Check_Button(310, 90, 90, 20, "CD right");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcr_linel = new Fl_Check_Button(310, 110, 90, 20, "Line left");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcr_midil = new Fl_Check_Button(310, 150, 90, 20, "MIDI left");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcr_midir = new Fl_Check_Button(310, 170, 90, 20, "MIDI right");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      { Fl_Check_Button* o = ct1745_srcr_liner = new Fl_Check_Button(310, 130, 90, 20, "Line right");
        o->down_box(FL_DIAMOND_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)update_ct1745);
      }
      o->end();
    }
    o->end();
  }
  return w;
}
